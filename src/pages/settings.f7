<template>
    <div class="page">
      <div class="navbar">
        <div class="navbar-bg"></div>
        <div class="navbar-inner sliding">
          <div class="left">
            <a href="#" class="link back">
              <i class="icon icon-back"></i>
              <span class="if-not-md">Back</span>
            </a>
          </div>
          <div class="title">Settings</div>
        </div>
      </div>
      <div class="page-content">
        <div class="block block-strong inset">
          <form id="form">
            <div class="list">
                <div class="block-title">Notifications</div>
                <p style="margin-left: 20px;">SMS Notifications are only available for US and Canada phone numbers, ntfy can be used for all other scenarios.</p>
              <ul>
                <li class="item-content item-input item-input-outline">
                    <div class="item-inner">
                      <div class="item-title item-label">ntfy Host</div>
                      <div class="item-input-wrap">
                        <input type="url" placeholder="ntfy api base" id="ntfyBase" name="ntfyBase" value="https://ntfy.sh/" />
                        <span class="input-clear-button"></span>
                      </div>
                    </div>
                </li>

                <li class="item-content item-input item-input-outline">
                    <div class="item-inner">
                      <div class="item-title item-label">ntfy Topic Name</div>
                      <div class="item-input-wrap">
                        <input type="text" placeholder="ntfy topic name" id="ntfyTopic" name="ntfyTopic" />
                        <span class="input-clear-button"></span>
                      </div>
                    </div>
                </li>
              </ul>
            </div>
          </form>
          <div class="block block-strong">
            <a class="button button-fill saveNtfy" href="#" onclick="navigator.vibrate(25);">Save</a>
          </div>
        </div>


        <div class="block block-strong inset" style="align-items: center;">
            <form id="form">
              <div class="list">
                  <div class="block-title">SMS Notifications</div>
                  <div id="phoneNums" style="padding-left: 20px;"></div>
                <ul class="grid grid-cols-2">
                  <li class="item-content item-input item-input-outline">
                      <div class="item-inner">
                        <div class="item-title item-label">Phone Number</div>
                        <div class="item-input-wrap">
                            <div style="display: flex; gap: 4px; align-items: center;">
                                <span>+1</span>
                                <input type="tel" validate required placeholder="XXXXXXXXXX" id="phoneNum" name="phoneNum" />
                            </div>
                          <span class="input-clear-button"></span>
                        </div>
                      </div>
                  </li>
                  <div class="block block-strong" style="margin-top: 13px; padding-top: 0; height: fit-content; margin-bottom: 0; padding-bottom: 0;">
                    <a class="button button-fill" id="savePhoneButton" href="#" onclick="navigator.vibrate(25);">Add</a>
                  </div>
                </ul>
              </div>
            </form>
          </div>
      </div>
    </div>
  </template>
  <style>
    p {
      margin: 10px 0;
    }
  </style>
  <script>
    const { Client, Account, ID, Databases, Functions } = Appwrite;
    const client = new Client();
    client
      .setEndpoint('https://appwrite.shuchir.dev/v1')
      .setProject('wheresmyflight');
    
    const account = new Account(client);
    const databases = new Databases(client);
    const functions = new Functions(client);
  
    export default function (props, { $, $f7, $on, $onBeforeMount, $onMounted, $onBeforeUnmount, $onUnmounted }) {
      $on('pageInit', () => {

        function verifyNumber(phoneNum) {
            let code = String(document.getElementById(`verify${phoneNum}`).value)
            let userId = localStorage.getItem("login");
            $f7.dialog.preloader("Verifying Phone Number...")
            databases.getDocument('settings', 'phoneVerification', userId+phoneNum)
            .then(resp => {
                if (code != resp.code) {
                    $f7.dialog.close()
                    $f7.dialog.alert("Verification Code Incorrect!")
                    return
                }
                databases.updateDocument('settings', 'phoneNumbers', userId+phoneNum, {
                    verified: true
                })
                .then(() => {
                    databases.deleteDocument('settings', 'phoneVerification', userId+phoneNum)
                    .then(() => {
                        $f7.dialog.close()
                        $f7.dialog.alert("Phone Number Verified!", () => {
                            $f7.views.main.router.refreshPage();
                        })
                    })
                })
            })
            .catch(err => {
                $f7.dialog.close()
                $f7.dialog.alert("Verification Code Incorrect!")
            })
        }

        window.verifyNumber = verifyNumber

        function deleteNumber(phoneNum) {
            let userId = localStorage.getItem("login");
            $f7.dialog.preloader("Deleting Phone Number...")
            databases.deleteDocument('settings', 'phoneNumbers', userId+phoneNum)
            .then(() => {
                databases.deleteDocument('settings', 'phoneVerification', userId+phoneNum)
                .then(() => {
                    $f7.dialog.close()
                    $f7.dialog.alert("Phone Number Deleted!", () => {
                        $f7.views.main.router.refreshPage();
                    })
                })
                .catch(() => {
                    $f7.dialog.close()
                    $f7.dialog.alert("Phone Number Deleted!", () => {
                        $f7.views.main.router.refreshPage();
                    })
                })
            })
        }

        window.deleteNumber = deleteNumber
        
        $f7.dialog.preloader("Loading Settings...")
        let userId = localStorage.getItem("login");
        databases.getDocument('settings', 'prefs', userId)
        .then((response) => {
            console.log(response)
            $("#ntfyBase").val(response.ntfyBase)
            $("#ntfyTopic").val(response.ntfyTopic)

            if (response.phoneNumbers) {
                $("#phoneNums").html(`<div class="block-title">Saved Numbers:</div>`)
                response.phoneNumbers.forEach(phone => {
                    document.getElementById("phoneNums").innerHTML += `<div class="grid grid-cols-4" style="width: fit-content; align-items: center;">
                    <p style="margin-left: 15px;">+1&nbsp;${phone.phoneNumber} (${phone.verified ? 'Verified' : 'Not Verified'})</p>
                    ${phone.verified ? '' : `<li class="item-content item-input item-input-outline">
                        <div class="item-inner">
                            <div class="item-title item-label">Verification Code</div>
                            <div class="item-input-wrap">
                                <input type="number" validate required placeholder="XXXXXX" id="verify${phone.phoneNumber}" />
                            <span class="input-clear-button"></span>
                            </div>
                        </div>
                    </li>
                    <div class="block block-strong" style="margin-top: 0; padding-top: 0; height: fit-content; margin-bottom: 0; padding-bottom: 0;">
                        <a class="button button-fill" href="#" onclick="navigator.vibrate(25); verifyNumber('${phone.phoneNumber}')">Verify</a>
                    </div>`}

                    <div>
                        <div class="block block-strong" style="margin-top: 0; padding-top: 0; height: fit-content; margin-bottom: 0; padding-bottom: 0;">
                            <a class="button button-fill color-red" href="#" onclick="navigator.vibrate(25); deleteNumber('${phone.phoneNumber}')">Delete</a>
                        </div>
                    </div>
                    </div>
                    `
                })
                document.getElementById("phoneNums").innerHTML += "<br>"
            }
            $f7.dialog.close()
        })

        $(".saveNtfy").on("click", function() {
            let ntfyBase = $("#ntfyBase").val()
            let ntfyTopic = $("#ntfyTopic").val()
            
            let userId = localStorage.getItem("login");
            try {
                databases.createDocument('settings', 'prefs', userId, {
                    userId: userId,
                    ntfyBase: ntfyBase,
                    ntfyTopic: ntfyTopic
                },
                [
                    `read("user:${userId}")`, 
                    `write("user:${userId}")`
                ])
                .then((response) => {
                    $f7.dialog.alert("Settings Saved!")
                    console.log(response)
                })
                .catch((error) => {
                    databases.updateDocument('settings', 'prefs', userId, {
                    ntfyBase: ntfyBase,
                    ntfyTopic: ntfyTopic
                    },
                    [
                        `read("user:${userId}")`, 
                        `write("user:${userId}")`
                    ])
                    .then((response) => {
                        $f7.dialog.alert("Settings Saved!")
                        console.log(response)
                    })
                });
            } 
            
            catch (error) {
                console.warn(error)
            }
        })
        
        $("#savePhoneButton").on("click", () => {
            let phoneNum = $("#phoneNum").val()
            $f7.dialog.preloader("Saving Phone Number...")
            let userId = localStorage.getItem("login");
            try {
                databases.createDocument('settings', 'phoneNumbers', userId+phoneNum, {
                    userId: userId,
                    phoneNumber: phoneNum
                },
                [
                    `read("user:${userId}")`, 
                    `write("user:${userId}")`
                ])
                .then((response) => {
                    databases.updateDocument('settings', 'prefs', userId, {
                      phoneNumbers: [response.$id]  
                    })
                    .then(() => {
                        functions.createExecution(
                            'send-verification',
                            `{
                            "phoneNum": "${phoneNum}",
                            "userId": "${userId}"
                            }`,
                            true
                        ).then(result => {
                            let completed = false
                            console.log("initial", result)
                            setInterval(() => {
                            if (!completed) {
                            functions.getExecution("send-verification", result.$id).then(res => {
                                console.log(res)
                                if (res.status == "completed") {
                                completed = true
                                console.log("COMPLETED", res)
                                $f7.dialog.close()
                                $f7.dialog.alert("Phone Number Saved! Please verify it through settings.", () => {
                                    $f7.views.main.router.refreshPage();
                                })
                                }
                                else if (res.status == "failed") {
                                completed = true
                                console.log("FAILED", res)
                                }
                            })
                            }
                            }, 500)
                        })
                        .catch(err => {
                            console.error(err)
                        })
                    })
                    .catch((error) => {
                        databases.createDocument('settings', 'prefs', userId, {
                            userId: userId,
                            phoneNumbers: [response.$id]
                        },
                        [
                            `read("user:${userId}")`, 
                            `write("user:${userId}")`
                        ]
                    ).then(() => {
                        functions.createExecution(
                            'send-verification',
                            `{
                            "phoneNum": "${phoneNum}",
                            "userId": "${userId}"
                            }`,
                            true
                        ).then(result => {
                            let completed = false
                            console.log("initial", result)
                            setInterval(() => {
                            if (!completed) {
                            functions.getExecution("send-verification", result.$id).then(res => {
                                console.log(res)
                                if (res.status == "completed") {
                                completed = true
                                console.log("COMPLETED", res)
                                $f7.dialog.close()
                                $f7.dialog.alert("Phone Number Saved! Please verify it through settings.", () => {
                                    $f7.views.main.router.refreshPage();
                                })
                                }
                                else if (res.status == "failed") {
                                completed = true
                                console.log("FAILED", res)
                                }
                            })
                            }
                            }, 500)
                        })
                        .catch(err => {
                            console.error(err)
                        })
                    })
                    })
                    console.log(response)
                })
                .catch((error) => {
                    $f7.dialog.close()
                    $f7.dialog.alert("Phone Number Already Exists!")
                });
            } 
            
            catch (error) {
                console.warn(error)
            }
        })
    })

      // Return render function
      return $render;
    }
  </script>